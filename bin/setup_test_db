#!/usr/bin/env bash
set -euo pipefail

echo "Setting up test database..."
echo "Environment info:"
echo "  - RAILS_ENV: ${RAILS_ENV:-not set}"
echo "  - DATABASE_URL: ${DATABASE_URL:-not set}"
echo "  - PWD: $(pwd)"
echo "  - PostgreSQL version: $(psql --version)"

# Database configuration
DB_NAME=${DATABASE_NAME:-jasonramirez_test}
DB_USER=${DATABASE_USER:-circleci}
DB_HOST=${DATABASE_HOST:-localhost}

# Create database if it doesn't exist
echo "Creating database: $DB_NAME"
if createdb -h "$DB_HOST" -U "$DB_USER" "$DB_NAME" 2>/dev/null; then
    echo "‚úÖ Database created successfully"
else
    # Check if database actually exists (creation might have failed for other reasons)
    if psql -h "$DB_HOST" -U "$DB_USER" -d "$DB_NAME" -c "SELECT 1;" >/dev/null 2>&1; then
        echo "‚úÖ Database already exists and is accessible"
    else
        echo "‚ùå Database creation failed and database is not accessible"
        echo "‚ùå This is a critical error - cannot continue"
        exit 1
    fi
fi

# Enable pgvector extension - REQUIRED for application functionality
echo "Enabling pgvector extension..."
psql -h "$DB_HOST" -U "$DB_USER" -d "$DB_NAME" -c "CREATE EXTENSION IF NOT EXISTS vector;"
echo "‚úÖ pgvector extension enabled"

# Load database schema - CRITICAL: must succeed
echo "Loading database schema..."
if [ -f "db/structure.sql" ]; then
    echo "üìÑ Found structure.sql file ($(wc -l < db/structure.sql) lines)"
    # Filter out problematic lines for CI
    cat db/structure.sql | \
        grep -v "transaction_timeout" | \
        psql -h "$DB_HOST" -U "$DB_USER" -d "$DB_NAME" --no-psqlrc
    echo "‚úÖ Schema loaded successfully"
else
    echo "‚ùå db/structure.sql not found"
    exit 1
fi

# Run migrations - CRITICAL: must succeed
echo "Running Rails migrations..."
export RAILS_ENV=test
bundle exec rails db:migrate
echo "‚úÖ Migrations run successfully"

# Note: All tables and columns should be created by migrations above

# Set Rails environment - CRITICAL: must succeed
echo "Setting Rails test environment..."
export RAILS_ENV=test
bundle exec rails db:environment:set
echo "‚úÖ Rails environment set successfully"

# Final verification - CRITICAL: all tables must exist
echo "Final database verification..."
echo "Tables in database:"
psql -h "$DB_HOST" -U "$DB_USER" -d "$DB_NAME" -c "\dt"

echo "Schema migrations status:"
psql -h "$DB_HOST" -U "$DB_USER" -d "$DB_NAME" -c "SELECT COUNT(*) as migration_count FROM schema_migrations;"

echo "Verifying critical tables exist:"
for table in posts admins knowledge_items chat_messages knowledge_chunks; do
    echo "- Checking $table:"
    if psql -h "$DB_HOST" -U "$DB_USER" -d "$DB_NAME" -c "\d $table" >/dev/null 2>&1; then
        echo "  ‚úÖ $table exists"
    else
        echo "  ‚ùå $table MISSING - CRITICAL ERROR"
        exit 1
    fi
done

echo "‚úÖ Test database setup complete!"
