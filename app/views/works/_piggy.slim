= render partial: "works_page_navigation", locals: { \
    previous_target: "penner",
    next_target: "tinysplash",
  }

section.hero.hero--mini
  = image_tag "works/piggy-phone.png", alt: "Piggy"

section.content.content--reading
  markdown:
    # Piggy

    The internet is filled with convenient and user friendly interactions that
    encourage you to spend money: one-click purchasing, recommendation engines,
    wish-lists, registries, SMS purchasing, etc. There are loads of buttons that
    help you spend money. However, there are very few buttons to help you save.

    Piggy brings the save button to the forefront, and helps people develop
    better money-saving habits one day at a time.

    # The problem we're solving

    A friend and I got into a discussion about how difficult it is to save
    money. Our conversation shifted to complaining about how our culture is a
    spending culture, and we are pushed to spend but not to save.

    In our personal lives spending occurs daily, while saving occurs bi-weekly
    or monthly.  We are very good at spending because we practice it daily, but
    the opposite is true of saving.  As a result, the act of spending feels easy
    and seamless, while saving money feels like a chore and takes effort.

    Moreover, we both didn't have confidence in our ability to save. We felt
    that our spending habits were bad. We recalled that when we did have _extra_
    cash, we usually ended up spending it on socializing or superfluous things.

    We came up with this problem statement:

    * I want to save money, but my current saving habits and lack of extra
      cash make it very difficult to save money.

    Our next step was to do some customer discovery and see if other shared in
    this pain.

    # Customer Discovery

    Before we started to dig into solutions, we wanted to see if other people
    had a similar relationship with money and/or related to our problem
    statement. We created a short list of questions to ask people. We started
    with gathering qualitative data from 5 in-person interviews.

    After some basic analysis we found that:

    * **Most** people desired to save more money.
    * **Most** people spend money every day.
    * **Most** people did have spendable income.
    * **Half** of the people said they did not have good saving habits.
    * **Some** people said they didn't budget.
    * **Few** people said they spend "too much".
    * **Few** people said they are often encouraged by others to save money.
    * **Few** people saved directly out of their paycheck

    We thought these responses validated that **people wanted to save money, but
    their saving habits were bad**.

    However, we feel that our assumption that the lack of extra cash led added
    to the difficulty of saving was invalidated.

    We observed from multiple in-person interviews that extra cash wasn't viewed
    as money they _should save_, rather there was a perception that the extra
    cash could be spent.

    After the surveys and the interviews, we modified our problem statement:

    * I have extra money that I want to save, but I have bad saving habits.

    At this point we felt confident that people resonated with our problem
    statment, and decided it was time for an abbreviated [design
    sprint](https://library.gv.com/the-gv-research-sprint-a-4-day-process-for-answering-important-startup-questions-97279b532b25#.9unipl4gb).

    # The Sprint

    Almost right away we had an interesting finding.  While getting background
    and looking at our competition, we noticed that most existing tools were
    directed at helping people get context around their money. They "helped"
    people save by offering up budgets or attempting to automate the saving
    process.

    Looking at our competition was eye opening. It didn't seem that anyone had
    acitvely focused on developing a persons saving habit. Rather, existing
    tools aimed to help people save money by monitoring spending habits. We kept
    this top of mind as we went though the sprint.

    As we diverged we continually found ourselves digging into the belief that:

    * People's saving habits will be improved if we engage them in saving daily.

    As we continued to sketch out solutions, we refined that statement further:

    * Providing a person with daily encouragement and reminders to save their
      left over spending cash will help develop better saving habits.

    From here we developed a user journey to help guide us through building our
    prototype:

    <div class="image--centered">
      <img src="#{image_path("works/piggy-user-journey.png")}" />
    </div>

    As we refined a potential solution, we surfaced many assumptions about our
    users that we needed to test.

    * People will use one account for all daily spending.
    * People want to be reminded to save money daily.
    * People want the option to save.
    * People will save out of spending cash, and that is separate than bills.

    Next we set out to build a prototype to test with users.

    # Prototype

    Based off the outcome from the sprint, we started to build a prototype to
    test that our solution was a viable solution and addressed our riskiest
    assumptions:

    * People wouldn't pay for this service
    * People will use one account for all daily spending.
    * People want to be reminded to save money daily.
    * People want the option to save.
    * People will save out of spending cash, and that is separate than bills.

    Without further ado, here is the prototype:

- if browser.device.mobile?
  section.content.content--reading
    = link_to "Click to view the Invision prototype", "https://invis.io/346H2GDMG",
        target: "_blank"
- else
  .work-prototype
    iframe width="438" height="930" src="//invis.io/7P5H26KTR" frameborder="0" \
      allowfullscreen

section.content.content--reading
  markdown:
    # Results

    We ran 7 user tests with our "target market"; people who made $80K+,
    currently _wanted_ to save money, and felt that they had bad saving habits.
    We weren't entirely confident that this was our target market, but that was
    the group we had gotten the most positive feedback from.

    The user tests were a great success. Not only did we uncover some (now
    seemingly obvious) interface and experience problems, but we got a lot of
    positive feedback and validation that being prompted to save money felt
    empowering, and that it felt different from other tools. About half of the
    group users asked to be notified when the application was to be released
    without being prompted.

    # MVP

    Before we started to develop the MVP Piggy application, we spiked on the
    engineering side of things. We quickly ran into some difficult technical
    hurdles. The immediate problem we faced was facilitating the transferring of
    funds from a checking account to a savings account. We were able to find a
    means to do so, but at a high cost.  The best solution we found would cost
    each user $10 per month.

    With a cost that high, we didn't believe that our _complete_ solution would
    be viable. Five options we were considering:

    1. Don't have a save button, rather remind and suggest an amount save.

    2. Partner with a bank to get free access to the API to facilitate money
       transfers free of charge.

    3. Find a better/free solution to facilitate money transferring.

    4. Create a better/free solution to facilitate money transferring.

    5. Get users to pay

    To date, we are currently pursuing the third option, while considering the
    first option to be our MPV. We felt that although you couldn't save money
    using the application, the daily reminders and encouragement would still be
    usefull.  Our end goal is to provide the means to directly save money
    without any charge to the customer, so option 5 is out of the picture for
    now.

    # Updates

    <small>March 1st, 2016</small>

    We were able to negotiate the use of an API for up to 10 accounts for free.
    Although this isn't ideal or for that matter a scalable solution, we felt it
    was a positive step in the right direction and would allow us to work with
    some early adopters.

    Check back for more updates!

= render partial: "works_navigation", locals: { \
    previous_target: "penner",
    next_target: "tinysplash",
  }
